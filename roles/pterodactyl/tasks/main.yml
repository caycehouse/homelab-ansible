- name: Install dependencies
  ansible.builtin.include_tasks: deps.yml

- name: /var/www/pterodactyl is present
  ansible.builtin.file:
    path: /var/www/pterodactyl
    state: directory
    owner: www-data
    group: www-data
    mode: 0750

- name: Create a new database with name 'panel'
  community.mysql.mysql_db:
    name: panel
    state: present

- name: Create database user with name 'pterodactyl'
  community.mysql.mysql_user:
    name: pterodactyl
    password: "{{ pterodactyl_panel_db_password }}"
    priv: 'panel.*:ALL,GRANT'
    state: present

- name: Detect existing install and check for available upgrade
  ansible.builtin.include_tasks: detect_install_upgrade.yml

- name: .env file is installed
  ansible.builtin.template:
    src: env.j2
    dest: /var/www/pterodactyl/.env
    owner: www-data
    group: www-data
    mode: 0600

- name: Install Panel
  ansible.builtin.include_tasks: install.yml
  when: not pterodactyl_panel_envfile.stat.exists

- name: Upgrade Panel version
  ansible.builtin.include_tasks: upgrade.yml
  when: (pterodactyl_panel_detected_version|default(pterodactyl_panel_version) != pterodactyl_panel_version)

- name: Schedule cronjob is present
  ansible.builtin.cron:
    name: Pterodactyl Panel - Schedule
    job: php /var/www/pterodactyl/artisan schedule:run >> /dev/null 2>&1

- name: Install pteroq service file
  ansible.builtin.copy:
    src: pteroq.service
    dest: /etc/systemd/system/pteroq.service
    owner: root
    group: root
    mode: 0644
  notify: Restart pteroq

- name: Enable and start redis-server
  ansible.builtin.systemd:
    name: redis-server
    enabled: true
    state: started

- name: Enable and start pteroq.service
  ansible.builtin.systemd:
    name: pteroq.service
    enabled: true
    state: started

- name: Ensure cert directory exists
  ansible.builtin.file:
    path: /etc/letsencrypt/live/{{ pterodactyl_panel_domain }}
    state: directory
    owner: root
    group: root
    mode: 0600

- name: Check if cert is already present
  ansible.builtin.stat:
    path: /etc/letsencrypt/live/{{ pterodactyl_panel_domain }}/fullchain.pem
  register: pterodactyl_panel_cert

- name: SSL cert is present
  ansible.builtin.command: cd /etc/letsencrypt/live/{{ pterodactyl_panel_domain }} && sudo tailscale cert --cert-file fullchain.pem --key-file privkey.pem {{ pterodactyl_panel_domain }}
  when: not pterodactyl_panel_cert.stat.exists

- name: SSL cronjob is present
  ansible.builtin.cron:
    name: Pterodactyl Panel - SSL
    job: cd /etc/letsencrypt/live/{{ pterodactyl_panel_domain }} && sudo tailscale cert --cert-file fullchain.pem --key-file privkey.pem {{ pterodactyl_panel_domain }}
    minute: 0
    hour: 23

- name: Nginx default site is disabled
  ansible.builtin.file:
    path: /etc/nginx/sites-enabled/default
    state: absent

- name: Pterodactyl.conf file is installed
  ansible.builtin.template:
    src: pterodactyl.conf.j2
    dest: /etc/nginx/sites-available/pterodactyl.conf
    owner: root
    group: root
    mode: 0644

- name: Nginx pterodactyl site is enabled
  ansible.builtin.file:
    src: /etc/nginx/sites-available/pterodactyl.conf
    dest: /etc/nginx/sites-enabled/pterodactyl.conf
    owner: root
    group: root
    state: link
  notify: Restart nginx
